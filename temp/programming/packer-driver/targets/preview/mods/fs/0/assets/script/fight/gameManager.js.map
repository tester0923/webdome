{"version":3,"sources":["file:///Users/amliya/Project/game/demo/test/assets/script/fight/gameManager.ts"],"names":["_decorator","Component","Node","CameraComponent","Vec3","SkeletalAnimationComponent","ParticleSystemComponent","AnimationComponent","find","EffectManager","clientEvent","playerData","Monster","uiManager","MapManager","GameCamera","Player","resourceUtil","poolManager","constant","localConfig","AudioManager","ccclass","property","GameManager","type","onEnable","on","EVENT_TYPE","ON_GAME_INIT","_onGameInit","ON_GAME_OVER","_onGameOver","ON_GAME_PAUSE","_onGamePause","REFRESH_LEVEL","_refreshLevel","RECYCLE_ALL","_recycleAll","onDisable","off","start","mainCamera","camera","getComponent","scriptGameCamera","ndGameManager","node","ndMapManager","ndEffectManager","_oriMainLightWorPos","ndLight","worldPosition","clone","isTesting","window","instance","level","playerInfo","totalLevel","getTableArr","length","mapInfo","queryByID","String","console","log","attackAddition","defenseAddition","hpAddition","moveSpeedAddition","attackSpeedAddition","showDialog","dispatchEvent","HIDE_WARP_GATE","isGameStart","isGamePause","isGameOver","isWin","isRevive","arrMonster","gameSpeed","ndBoss","existentNum","addFightTimes","pauseAll","arrMap","mapName","split","Math","floor","random","preloadMonsterSkill","then","_loadMap","ndPlayer","_createPlayer","scriptPlayer","resetPlayerState","HIDE_LOADING_PANEL","cb","scriptMapManager","buildMap","loadModelRes","pf","getNode","ndFollowTarget","init","isFirstLoad","preloadArrow","recycle","i","children","ndChild","name","putNode","hideDialog","nextLevel","Number","highestLevel","getNearestMonster","offsetA","offsetB","playerWorPos","arr","sort","a","b","distanceA","subtract","distanceB","filter","item","scriptMonster","parent","isDie","scriptBoss","getNearbyMonster","ndMonster","isAll","range","offsetPos","concat","push","index","idx","refreshEffectSpeed","targetNode","value","arrAni","getComponentsInChildren","forEach","clips","clip","aniName","aniState","getState","speed","arrSkeletalAni","arrParticle","simulationSpeed","addGold","updatePlayerInfo","ceil","REFRESH_GOLD","arrName","Promise","resolve","reject","arrLoadSkill","arrInfo","ID","startsWith","element","arrSkill","skill","id","arrMonsterSkill","indexOf","arrPromise","skillInfo","p","loadEffectRes","resName","prefab","ndSkillCollider","setWorldPosition","x","z","all","e","error","checkTriggerAll","SHOW_WARP_GATE","update","deltaTime","_offsetWorPosMainLight","set","add","_isWin","_gameSpeed"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,e,OAAAA,e;AAAiBC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,0B,OAAAA,0B;AAA4BC,MAAAA,uB,OAAAA,uB;AAAyBC,MAAAA,kB,OAAAA,kB;AAAoBC,MAAAA,I,OAAAA,I;;AAN7HC,MAAAA,a,iBAAAA,a;;AACAC,MAAAA,W,iBAAAA,W;;AACAC,MAAAA,U,iBAAAA,U;;AACAC,MAAAA,O,iBAAAA,O;;AACAC,MAAAA,S,iBAAAA,S;;AACAC,MAAAA,U,iBAAAA,U;;AAEAC,MAAAA,U,iBAAAA,U;;AACAC,MAAAA,M,iBAAAA,M;;AACAC,MAAAA,Y,kBAAAA,Y;;AACAC,MAAAA,W,kBAAAA,W;;AACAC,MAAAA,Q,kBAAAA,Q;;AACAC,MAAAA,W,kBAAAA,W;;AAEAC,MAAAA,Y,kBAAAA,Y;;;;;;;AACDC,MAAAA,O,GAAsBtB,U,CAAtBsB,O;AAASC,MAAAA,Q,GAAavB,U,CAAbuB,Q;;6BAGJC,W,WADZF,OAAO,CAAC,aAAD,C,UAEHC,QAAQ;AAAA;AAAA,mC,UAGRA,QAAQ,CAAC;AAACE,QAAAA,IAAI;AAAA;AAAA;AAAL,OAAD,C,UAGRF,QAAQ,CAACrB,IAAD,C;;;;;;;;;;;;;;;;;;oEAGa,E;;4EACU,E;;gFAmDI,I;;mFACG,IAAIE,IAAJ,E;;;;;;;AAGA;eAEvCsB,Q,GAAA,oBAAY;AACR;AAAA;AAAA,0CAAYC,EAAZ,CAAe;AAAA;AAAA,oCAASC,UAAT,CAAoBC,YAAnC,EAAiD,KAAKC,WAAtD,EAAmE,IAAnE;AACA;AAAA;AAAA,0CAAYH,EAAZ,CAAe;AAAA;AAAA,oCAASC,UAAT,CAAoBG,YAAnC,EAAiD,KAAKC,WAAtD,EAAmE,IAAnE;AACA;AAAA;AAAA,0CAAYL,EAAZ,CAAe;AAAA;AAAA,oCAASC,UAAT,CAAoBK,aAAnC,EAAkD,KAAKC,YAAvD,EAAqE,IAArE;AACA;AAAA;AAAA,0CAAYP,EAAZ,CAAe;AAAA;AAAA,oCAASC,UAAT,CAAoBO,aAAnC,EAAkD,KAAKC,aAAvD,EAAsE,IAAtE;AACA;AAAA;AAAA,0CAAYT,EAAZ,CAAe;AAAA;AAAA,oCAASC,UAAT,CAAoBS,WAAnC,EAAgD,KAAKC,WAArD,EAAkE,IAAlE;AACH,S;;eAEDC,S,GAAA,qBAAa;AACT;AAAA;AAAA,0CAAYC,GAAZ,CAAgB;AAAA;AAAA,oCAASZ,UAAT,CAAoBC,YAApC,EAAkD,KAAKC,WAAvD,EAAoE,IAApE;AACA;AAAA;AAAA,0CAAYU,GAAZ,CAAgB;AAAA;AAAA,oCAASZ,UAAT,CAAoBG,YAApC,EAAkD,KAAKC,WAAvD,EAAoE,IAApE;AACA;AAAA;AAAA,0CAAYQ,GAAZ,CAAgB;AAAA;AAAA,oCAASZ,UAAT,CAAoBK,aAApC,EAAmD,KAAKC,YAAxD,EAAsE,IAAtE;AACA;AAAA;AAAA,0CAAYM,GAAZ,CAAgB;AAAA;AAAA,oCAASZ,UAAT,CAAoBO,aAApC,EAAmD,KAAKC,aAAxD,EAAuE,IAAvE;AACA;AAAA;AAAA,0CAAYI,GAAZ,CAAgB;AAAA;AAAA,oCAASZ,UAAT,CAAoBS,WAApC,EAAiD,KAAKC,WAAtD,EAAmE,IAAnE;AACH,S;;eAEDG,K,GAAA,iBAAS;AAAA;;AACLjB,UAAAA,WAAW,CAACkB,UAAZ,mBAAyB,KAAKC,MAA9B,iDAAyB,aAAaC,YAAb,CAA0BzC,eAA1B,CAAzB;AACAqB,UAAAA,WAAW,CAACqB,gBAAZ,oBAA+B,KAAKF,MAApC,kDAA+B,cAAaC,YAAb;AAAA;AAAA,uCAA/B;AACApB,UAAAA,WAAW,CAACsB,aAAZ,GAA4B,KAAKC,IAAjC;AACAvB,UAAAA,WAAW,CAACwB,YAAZ,GAA2BxC,IAAI,CAAC,YAAD,CAA/B;AACAgB,UAAAA,WAAW,CAACyB,eAAZ,GAA8BzC,IAAI,CAAC,eAAD,CAAlC;AAEA,eAAK0C,mBAAL,GAA2B,KAAKC,OAAL,CAAaC,aAAb,CAA2BC,KAA3B,EAA3B;;AAEA,cAAI7B,WAAW,CAAC8B,SAAhB,EAA2B;AACvB;AACAC,YAAAA,MAAM,CAAC1C,SAAP,GAAmB;AAAA;AAAA,wCAAU2C,QAA7B,CAFuB,CAGvB;;AACAD,YAAAA,MAAM,CAAClC,YAAP,GAAsB;AAAA;AAAA,8CAAamC,QAAnC,CAJuB,CAKvB;;AACAD,YAAAA,MAAM,CAAC5C,UAAP,GAAoB;AAAA;AAAA,0CAAW6C,QAA/B,CANuB,CAOvB;;AACAD,YAAAA,MAAM,CAAC7C,WAAP;AAAA;AAAA,2CARuB,CASvB;;AACA6C,YAAAA,MAAM,CAACT,aAAP,GAAuBtB,WAAW,CAACsB,aAAnC,CAVuB,CAWvB;;AACAS,YAAAA,MAAM,CAAC/B,WAAP,GAAqBA,WAArB,CAZuB,CAavB;;AACA+B,YAAAA,MAAM,CAACP,YAAP,GAAsBxB,WAAW,CAACwB,YAAlC,CAduB,CAevB;;AACAO,YAAAA,MAAM,CAAC9C,aAAP,GAAuB;AAAA;AAAA,gDAAc+C,QAArC,CAhBuB,CAiBvB;;AACAD,YAAAA,MAAM,CAACN,eAAP,GAAyBzB,WAAW,CAACyB,eAArC,CAlBuB,CAmBvB;;AACAM,YAAAA,MAAM,CAACpC,QAAP;AAAA;AAAA,qCApBuB,CAqBvB;AACA;AACH;AACJ;AAED;AACJ;AACA;;;eACYW,W,GAAR,uBAAuB;AACnB,cAAI2B,KAAK,GAAG;AAAA;AAAA,wCAAWD,QAAX,CAAoBE,UAApB,CAA+BD,KAA3C;AAEA,cAAIE,UAAU,GAAG;AAAA;AAAA,0CAAYH,QAAZ,CAAqBI,WAArB,CAAiC,YAAjC,EAA+CC,MAAhE,CAHmB,CAInB;;AACA,cAAIJ,KAAK,GAAGE,UAAZ,EAAwB;AACpBF,YAAAA,KAAK,GAAIE,UAAU,GAAG,EAAd,GAAoB,CAACF,KAAK,GAAGE,UAAT,IAAuB,EAAnD;AACH;;AAED,eAAKG,OAAL,GAAe;AAAA;AAAA,0CAAYN,QAAZ,CAAqBO,SAArB,CAA+B,YAA/B,EAA6CC,MAAM,CAACP,KAAD,CAAnD,CAAf;AACAQ,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsB,KAAKJ,OAA3B,EAVmB,CAWnB;;AACAtC,UAAAA,WAAW,CAAC2C,cAAZ,GAA6B,KAAKL,OAAL,CAAaK,cAA1C;AACA3C,UAAAA,WAAW,CAAC4C,eAAZ,GAA8B,KAAKN,OAAL,CAAaM,eAA3C;AACA5C,UAAAA,WAAW,CAAC6C,UAAZ,GAAyB,KAAKP,OAAL,CAAaO,UAAtC;AACA7C,UAAAA,WAAW,CAAC8C,iBAAZ,GAAgC,KAAKR,OAAL,CAAaQ,iBAA7C;AACA9C,UAAAA,WAAW,CAAC+C,mBAAZ,GAAkC,KAAKT,OAAL,CAAaS,mBAA/C;AAEA;AAAA;AAAA,sCAAUf,QAAV,CAAmBgB,UAAnB,CAA8B,sBAA9B;AAEA;AAAA;AAAA,0CAAYC,aAAZ,CAA0B;AAAA;AAAA,oCAAS7C,UAAT,CAAoB8C,cAA9C;AAEAlD,UAAAA,WAAW,CAACmD,WAAZ,GAA0B,KAA1B;AACAnD,UAAAA,WAAW,CAACoD,WAAZ,GAA0B,KAA1B;AACApD,UAAAA,WAAW,CAACqD,UAAZ,GAAyB,KAAzB;AACArD,UAAAA,WAAW,CAACsD,KAAZ,GAAoB,KAApB;AACAtD,UAAAA,WAAW,CAACuD,QAAZ,GAAuB,KAAvB;AACAvD,UAAAA,WAAW,CAACwD,UAAZ,GAAyB,EAAzB;AACAxD,UAAAA,WAAW,CAACyD,SAAZ,GAAwB,CAAxB;AACAzD,UAAAA,WAAW,CAAC0D,MAAZ,GAAqB,IAArB;AACA1D,UAAAA,WAAW,CAAC2D,WAAZ,GAA0B,CAA1B;AAEA;AAAA;AAAA,wCAAW3B,QAAX,CAAoB4B,aAApB;AAEA;AAAA;AAAA,4CAAa5B,QAAb,CAAsB6B,QAAtB;;AAEA,eAAKjD,aAAL;AACH;AAED;AACJ;AACA;;;eACYA,a,GAAR,yBAAyB;AAAA;;AACrB;AACA,cAAIkD,MAAM,GAAG,KAAKxB,OAAL,CAAayB,OAAb,CAAqBC,KAArB,CAA2B,GAA3B,CAAb;AACA,cAAID,OAAO,GAAGD,MAAM,CAACG,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,MAAM,CAACzB,MAAlC,CAAD,CAApB;AACAI,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBqB,OAAtB;AAEA,eAAKK,mBAAL,CAAyBL,OAAzB,EAAkCM,IAAlC,CAAuC,YAAI;AACvC,YAAA,MAAI,CAACvD,WAAL;;AACA,YAAA,MAAI,CAACwD,QAAL,CAAcP,OAAd,EAAuB,YAAI;AACvB;AACA,kBAAI,CAAC/D,WAAW,CAACuE,QAAjB,EAA2B;AACvB,gBAAA,MAAI,CAACC,aAAL;AACH,eAFD,MAEO;AACHxE,gBAAAA,WAAW,CAACyE,YAAZ,CAAyBC,gBAAzB;AACA;AAAA;AAAA,gDAAYzB,aAAZ,CAA0B;AAAA;AAAA,0CAAS7C,UAAT,CAAoBuE,kBAA9C;AACH;AACJ,aARD;AASH,WAXD;AAYH;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;;;eACYL,Q,GAAR,kBAAkBP,OAAlB,EAAmCa,EAAnC,EAA0D;AAAA,cAAvBA,EAAuB;AAAvBA,YAAAA,EAAuB,GAAR,cAAI,CAAE,CAAE;AAAA;;AACtD,eAAKC,gBAAL,CAAsBC,QAAtB,CAA+Bf,OAA/B,EAAwC,YAAI,CAAE,CAA9C,EAAgD,YAAI;AAChDa,YAAAA,EAAE,IAAIA,EAAE,EAAR;AACH,WAFD;AAGH;AAED;AACJ;AACA;AACA;AACA;AACA;;;eACYJ,a,GAAR,yBAAyB;AAAA;;AACrB;AAAA;AAAA,4CAAaO,YAAb,CAA0B,iBAA1B,EAA6CV,IAA7C,CAAkD,UAACW,EAAD,EAAW;AAAA;;AACzDhF,YAAAA,WAAW,CAACuE,QAAZ,GAAuB;AAAA;AAAA,4CAAYvC,QAAZ,CAAqBiD,OAArB,CAA6BD,EAA7B,EAAiC,MAAI,CAACzD,IAAtC,CAAvB;AAEA,gBAAIF,gBAAgB,4BAAGrB,WAAW,CAACkB,UAAf,0DAAG,sBAAwBK,IAAxB,CAA6BH,YAA7B;AAAA;AAAA,yCAAvB;AACAC,YAAAA,gBAAgB,CAAC6D,cAAjB,GAAkClF,WAAW,CAACuE,QAA9C;AAEA,gBAAIE,YAAY,4BAAGzE,WAAW,CAACuE,QAAf,0DAAG,sBAAsBnD,YAAtB;AAAA;AAAA,iCAAnB;AACApB,YAAAA,WAAW,CAACyE,YAAZ,GAA2BA,YAA3B;AACAA,YAAAA,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAEU,IAAd,GARyD,CAUzD;;AACA,gBAAInF,WAAW,CAACoF,WAAhB,EAA6B;AACzBpF,cAAAA,WAAW,CAACoF,WAAZ,GAA0B,KAA1B;AAEAX,cAAAA,YAAY,CAACY,YAAb,CAA0B,YAAI;AAC1B;AAAA;AAAA,gDAAYpC,aAAZ,CAA0B;AAAA;AAAA,0CAAS7C,UAAT,CAAoBuE,kBAA9C;AACH,eAFD;AAGH,aAND,MAMO;AACH;AAAA;AAAA,8CAAY1B,aAAZ,CAA0B;AAAA;AAAA,wCAAS7C,UAAT,CAAoBuE,kBAA9C;AACH;AACJ,WApBD;AAqBH;AAED;AACJ;AACA;AACA;AACA;AACA;;;eACY7D,W,GAAR,uBAAuB;AACnB,eAAK+D,gBAAL,CAAsBS,OAAtB;;AAEA,eAAK,IAAIC,CAAC,GAAG,KAAKhE,IAAL,CAAUiE,QAAV,CAAmBnD,MAAnB,GAA4B,CAAzC,EAA4CkD,CAAC,IAAI,CAAjD,EAAoDA,CAAC,EAArD,EAAyD;AACrD,gBAAME,OAAO,GAAG,KAAKlE,IAAL,CAAUiE,QAAV,CAAmBD,CAAnB,CAAhB;;AACA,gBAAIE,OAAO,CAACC,IAAR,KAAiB,UAArB,EAAiC;AAC7B;AAAA;AAAA,8CAAY1D,QAAZ,CAAqB2D,OAArB,CAA6BF,OAA7B;AACH;AACJ;;AAED,iBAAMzF,WAAW,CAACyB,eAAZ,CAA4B+D,QAA5B,CAAqCnD,MAA3C,EAAmD;AAC/C;AAAA;AAAA,4CAAYL,QAAZ,CAAqB2D,OAArB,CAA6B3F,WAAW,CAACyB,eAAZ,CAA4B+D,QAA5B,CAAqC,CAArC,CAA7B;AACH;AACJ;AAED;AACJ;AACA;;;eACYhF,W,GAAR,uBAAuB;AAAA;;AACnB,cAAIR,WAAW,CAACqD,UAAhB,EAA4B;AACxB;AACH;;AAEDrD,UAAAA,WAAW,CAACoD,WAAZ,GAA0B,IAA1B;AAEAX,UAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B,SAA1B,EAAqC1C,WAAW,CAACsD,KAAjD;AAEA;AAAA;AAAA,sCAAUtB,QAAV,CAAmB4D,UAAnB,CAA8B,kBAA9B;;AAEA,cAAI5F,WAAW,CAACsD,KAAhB,EAAuB;AACnBtD,YAAAA,WAAW,CAACqD,UAAZ,GAAyB,IAAzB;;AAEA,iBAAKvC,WAAL;;AAEA,gBAAI+E,SAAS,GAAGC,MAAM,CAAE;AAAA;AAAA,0CAAW9D,QAAX,CAAoBE,UAApB,CAA+BD,KAAjC,CAAN,GAAgD,CAAhE;AACA;AAAA;AAAA,0CAAWD,QAAX,CAAoBE,UAApB,CAA+BD,KAA/B,GAAuC4D,SAAvC,CANmB,CAQnB;;AACA,gBAAIA,SAAS,GAAG;AAAA;AAAA,0CAAW7D,QAAX,CAAoBE,UAApB,CAA+B6D,YAA/C,EAA6D;AACzD;AAAA;AAAA,4CAAW/D,QAAX,CAAoBE,UAApB,CAA+B6D,YAA/B,GAA8CF,SAA9C;AACH;;AAED;AAAA;AAAA,4CAAY5C,aAAZ,CAA0B;AAAA;AAAA,sCAAS7C,UAAT,CAAoBC,YAA9C;AACH,WAdD,MAcO;AACH;AAAA;AAAA,wCAAU2B,QAAV,CAAmBgB,UAAnB,CAA8B,oBAA9B,EAAoD,CAAC,YAAI;AACrD,kBAAIhD,WAAW,CAACuE,QAAhB,EAA0B;AACtB;AAAA;AAAA,gDAAYvC,QAAZ,CAAqB2D,OAArB,CAA6B3F,WAAW,CAACuE,QAAzC;AACAvE,gBAAAA,WAAW,CAACuE,QAAZ,GAAuB,IAAvB;AACAvE,gBAAAA,WAAW,CAACyE,YAAZ,GAA2B,IAA3B;AACH;;AAED,cAAA,MAAI,CAAC3D,WAAL;AACH,aARmD,CAApD;AASH;AACJ;AAED;AACJ;AACA;;;eACYJ,Y,GAAR,wBAAwB;AACpBV,UAAAA,WAAW,CAACoD,WAAZ,GAA0B,IAA1B;AACH;AAED;AACJ;AACA;AACA;;;oBACkB4C,iB,GAAd,6BAAmC;AAC/B,cAAIhG,WAAW,CAACwD,UAAZ,CAAuBnB,MAA3B,EAAmC;AAAA;;AAC/B,gBAAI4D,OAAa,GAAG,IAAIrH,IAAJ,EAApB;AACA,gBAAIsH,OAAa,GAAG,IAAItH,IAAJ,EAApB;AAEA,gBAAIuH,YAAY,6BAAGnG,WAAW,CAACuE,QAAf,2DAAG,uBAAsB3C,aAAzC;AACA,gBAAIwE,GAAG,GAAGpG,WAAW,CAACwD,UAAZ,CAAuB6C,IAAvB,CAA4B,UAACC,CAAD,EAASC,CAAT,EAAkB;AACpD,kBAAIC,SAAS,GAAG5H,IAAI,CAAC6H,QAAL,CAAcR,OAAd,EAAuBE,YAAvB,EAAqCG,CAAC,CAAC1E,aAAvC,EAAsDS,MAAtD,EAAhB;AACA,kBAAIqE,SAAS,GAAG9H,IAAI,CAAC6H,QAAL,CAAcP,OAAd,EAAuBC,YAAvB,EAAqCI,CAAC,CAAC3E,aAAvC,EAAsDS,MAAtD,EAAhB;AACA,qBAAQmE,SAAS,GAAGE,SAApB;AACH,aAJS,CAAV;AAMAN,YAAAA,GAAG,GAAGA,GAAG,CAACO,MAAJ,CAAW,UAACC,IAAD,EAAc;AAC3B,kBAAIC,aAAa,GAAGD,IAAI,CAACxF,YAAL;AAAA;AAAA,qCAApB;AACA,qBAAOwF,IAAI,CAACE,MAAL,KAAgB,IAAhB,IAAwB,CAACD,aAAa,CAACE,KAA9C;AACH,aAHK,CAAN;AAKA,mBAAOX,GAAG,CAAC,CAAD,CAAV;AACH,WAjBD,MAiBO,IAAIpG,WAAW,CAAC0D,MAAZ,IAAsB,CAAC1D,WAAW,CAACgH,UAAZ,CAAuBD,KAAlD,EAAyD;AAC5D,mBAAO/G,WAAW,CAAC0D,MAAnB;AACH,WAFM,MAEA;AACH,mBAAO,IAAP;AACH;AACJ;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;oBACkBuD,gB,GAAd,0BAAgCC,SAAhC,EAAiDC,KAAjD,EAAyEC,KAAzE,EAA4F;AAAA,cAA3CD,KAA2C;AAA3CA,YAAAA,KAA2C,GAA1B,KAA0B;AAAA;;AAAA,cAAnBC,KAAmB;AAAnBA,YAAAA,KAAmB,GAAH,CAAG;AAAA;;AACxF;AACA,cAAI5D,UAAiB,GAAG,EAAxB;AACA,cAAI6D,SAAe,GAAG,IAAIzI,IAAJ,EAAtB;;AAEA,cAAIoB,WAAW,CAACwD,UAAZ,CAAuBnB,MAA3B,EAAmC;AAC/BmB,YAAAA,UAAU,GAAGxD,WAAW,CAACwD,UAAZ,CAAuB8D,MAAvB,EAAb;AACH;;AAED,cAAItH,WAAW,CAAC0D,MAAhB,EAAwB;AACpBF,YAAAA,UAAU,CAAC+D,IAAX,CAAgBvH,WAAW,CAAC0D,MAA5B;AACH;;AAEDF,UAAAA,UAAU,GAAGA,UAAU,CAACmD,MAAX,CAAkB,UAACC,IAAD,EAAc;AACzC,gBAAIC,aAAa,GAAGD,IAAI,CAACxF,YAAL;AAAA;AAAA,mCAApB;AACAxC,YAAAA,IAAI,CAAC6H,QAAL,CAAcY,SAAd,EAAyBH,SAAS,CAACtF,aAAnC,EAAkDgF,IAAI,CAAChF,aAAvD;AACA,mBAAOgF,IAAI,CAACE,MAAL,KAAgB,IAAhB,IAAwB,CAACD,aAAa,CAACE,KAAvC,IAAgDM,SAAS,CAAChF,MAAV,MAAsB+E,KAAtE,IAA+EF,SAAS,CAACtF,aAAV,KAA4BgF,IAAI,CAAChF,aAAvH;AACH,WAJY,CAAb;;AAMA,cAAI4B,UAAU,CAACnB,MAAf,EAAuB;AACnB,gBAAI,CAAC8E,KAAL,EAAY;AACR,kBAAIK,KAAK,GAAGvD,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBX,UAAU,CAACnB,MAAtC,CAAZ;AACA,qBAAOmB,UAAU,GAAGA,UAAU,CAACmD,MAAX,CAAkB,UAAClB,OAAD,EAAgBgC,GAAhB,EAA8B;AAChE,uBAAOA,GAAG,KAAKD,KAAf;AACH,eAFmB,CAApB;AAGH,aALD,MAKO;AACH,qBAAOhE,UAAP;AACH;AACJ,WATD,MASO;AACH,mBAAOA,UAAP;AACH;AACJ;AAED;AACJ;AACA;AACA;AACA;AACA;;;oBACmBkE,kB,GAAd,4BAAkCC,UAAlC,EAAoDC,KAApD,EAAmE;AAChE,cAAI,CAACD,UAAL,EAAiB;AACb;AACH;;AACD,cAAIE,MAAM,GAAGF,UAAU,CAACG,uBAAX,CAAmC/I,kBAAnC,CAAb;AACA8I,UAAAA,MAAM,CAACE,OAAP,CAAe,UAACnB,IAAD,EAA4B;AACvCA,YAAAA,IAAI,CAACoB,KAAL,CAAWD,OAAX,CAAmB,UAACE,IAAD,EAAa;AAC5B,kBAAIC,OAAO,GAAGD,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEvC,IAApB;AACA,kBAAIyC,QAAQ,GAAGvB,IAAI,CAACwB,QAAL,CAAcF,OAAd,CAAf;AACAC,cAAAA,QAAQ,CAACE,KAAT,GAAiBT,KAAjB;AACH,aAJD;AAKH,WAND;AAQA,cAAIU,cAAc,GAAGX,UAAU,CAACG,uBAAX,CAAmCjJ,0BAAnC,CAArB;AACAyJ,UAAAA,cAAc,CAACP,OAAf,CAAuB,UAACnB,IAAD,EAAoC;AACvDA,YAAAA,IAAI,CAACoB,KAAL,CAAWD,OAAX,CAAmB,UAACE,IAAD,EAAa;AAC5B,kBAAIC,OAAO,GAAGD,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEvC,IAApB;AACA,kBAAIyC,QAAQ,GAAGvB,IAAI,CAACwB,QAAL,CAAcF,OAAd,CAAf;AACAC,cAAAA,QAAQ,CAACE,KAAT,GAAiBT,KAAjB;AACH,aAJD;AAKH,WAND;AAQA,cAAIW,WAAW,GAAGZ,UAAU,CAACG,uBAAX,CAAmChJ,uBAAnC,CAAlB;AACAyJ,UAAAA,WAAW,CAACR,OAAZ,CAAoB,UAACnB,IAAD,EAAiC;AACjDA,YAAAA,IAAI,CAAC4B,eAAL,GAAuBZ,KAAvB;AACH,WAFD;AAGH;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;;;oBACkBa,O,GAAd,iBAAuBb,KAAvB,EAA0C;AAAA,cAAnBA,KAAmB;AAAnBA,YAAAA,KAAmB,GAAH,CAAG;AAAA;;AACtC;AAAA;AAAA,wCAAW5F,QAAX,CAAoB0G,gBAApB,CAAqC,MAArC,EAA6CzE,IAAI,CAAC0E,IAAL,CAAUf,KAAV,CAA7C;AACA;AAAA;AAAA,0CAAY3E,aAAZ,CAA0B;AAAA;AAAA,oCAAS7C,UAAT,CAAoBwI,YAA9C;AACH;AAED;AACJ;AACA;AACA;AACA;AACA;;;eACWxE,mB,GAAP,6BAA4ByE,OAA5B,EAA6C;AAAA;;AACzC,iBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAmB;AAClC,gBAAIC,YAAsB,GAAG,EAA7B,CADkC,CACF;;AAChC,gBAAIC,OAAO,GAAG;AAAA;AAAA,4CAAYlH,QAAZ,CAAqBI,WAArB,CAAiCyG,OAAjC,CAAd,CAFkC,CAGlC;;AACAK,YAAAA,OAAO,GAAGA,OAAO,CAACvC,MAAR,CAAe,UAACC,IAAD,EAAa;AAClC,qBAAOA,IAAI,CAACuC,EAAL,CAAQC,UAAR,CAAmB,GAAnB,CAAP;AACH,aAFS,CAAV,CAJkC,CAQlC;;AACA,gBAAIF,OAAO,CAAC7G,MAAZ,EAAoB;AAChB6G,cAAAA,OAAO,CAACnB,OAAR,CAAgB,UAACsB,OAAD,EAAkB;AAC9B,oBAAIC,QAAQ,GAAGD,OAAO,CAACE,KAAR,KAAkB,EAAlB,GAAuB,EAAvB,GAA4BF,OAAO,CAACE,KAAR,CAAcvF,KAAd,CAAoB,GAApB,CAA3C;AACAsF,gBAAAA,QAAQ,CAACjH,MAAT,IAAmBiH,QAAQ,CAACvB,OAAT,CAAiB,UAACyB,EAAD,EAAgB;AAChD,sBAAI,MAAI,CAACC,eAAL,CAAqBC,OAArB,CAA6BF,EAA7B,MAAqC,CAAC,CAA1C,EAA6C;AACzC,oBAAA,MAAI,CAACC,eAAL,CAAqBlC,IAArB,CAA0BiC,EAA1B;;AACAP,oBAAAA,YAAY,CAAC1B,IAAb,CAAkBiC,EAAlB;AACH;AACJ,iBALkB,CAAnB;AAMH,eARD;AAUA,kBAAIG,UAAU,GAAG,EAAjB;;AACA,kBAAIV,YAAY,CAAC5G,MAAjB,EAAyB;AACrB,qBAAK,IAAIkD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0D,YAAY,CAAC5G,MAAjC,EAAyCkD,CAAC,EAA1C,EAA8C;AAC1C,sBAAM8D,OAAO,GAAGJ,YAAY,CAAC1D,CAAD,CAA5B,CAD0C,CAE1C;;AACA,sBAAIqE,SAAS,GAAG;AAAA;AAAA,kDAAY5H,QAAZ,CAAqBO,SAArB,CAA+B,cAA/B,EAA+C8G,OAA/C,CAAhB;AACA,sBAAIQ,CAAC,GAAG;AAAA;AAAA,oDAAaC,aAAb,CAA8BF,SAAS,CAACG,OAAxC,SAAmDH,SAAS,CAACG,OAA7D,EAAwE1F,IAAxE,CAA6E,UAAC2F,MAAD,EAAe;AAChG,wBAAIC,eAAe,GAAG;AAAA;AAAA,oDAAYjI,QAAZ,CAAqBiD,OAArB,CAA6B+E,MAA7B,EAAqChK,WAAW,CAACsB,aAAjD,CAAtB;AACA2I,oBAAAA,eAAe,CAACC,gBAAhB,CAAiC,MAAI,CAAC3I,IAAL,CAAUK,aAAV,CAAwBuI,CAAzD,EAA4D,EAA5D,EAAgE,MAAI,CAAC5I,IAAL,CAAUK,aAAV,CAAwBwI,CAAxF;AACH,mBAHO,CAAR;AAIAT,kBAAAA,UAAU,CAACpC,IAAX,CAAgBsC,CAAhB;AACH;;AAEDf,gBAAAA,OAAO,CAACuB,GAAR,CAAYV,UAAZ,EAAwBtF,IAAxB,CAA6B,YAAI;AAC7B0E,kBAAAA,OAAO,CAAC,IAAD,CAAP;AACH,iBAFD,WAES,UAACuB,CAAD,EAAU;AACf7H,kBAAAA,OAAO,CAAC8H,KAAR,CAAc,WAAd,EAA2BD,CAA3B;AACH,iBAJD;AAKH,eAjBD,MAiBO;AACHvB,gBAAAA,OAAO,CAAC,IAAD,CAAP;AACH;AACJ,aAhCD,MAgCO;AACHA,cAAAA,OAAO,CAAC,IAAD,CAAP;AACH;AACJ,WA5CM,CAAP;AA6CH;AAED;AACJ;AACA;AACA;AACA;AACA;;;oBACkByB,e,GAAd,2BAAiC;AAC7BxK,UAAAA,WAAW,CAAC2D,WAAZ,IAA2B,CAA3B;;AAEA,cAAI3D,WAAW,CAAC2D,WAAZ,IAA2B,CAA/B,EAAkC;AAC9B;AAAA;AAAA,4CAAYV,aAAZ,CAA0B;AAAA;AAAA,sCAAS7C,UAAT,CAAoBqK,cAA9C;AACH;AACJ,S;;eAEDC,M,GAAA,gBAAQC,SAAR,EAA2B;AACtB;AACA,cAAI3K,WAAW,CAACyE,YAAZ,IAA4BzE,WAAW,CAACyE,YAAZ,CAAyBlD,IAArD,IAA6D,CAACvB,WAAW,CAACqD,UAA9E,EAA0F;AACvFzE,YAAAA,IAAI,CAAC6H,QAAL,CAAc,KAAKmE,sBAAnB,EAA2C5K,WAAW,CAACuE,QAAZ,CAAqB3C,aAAhE,EAA+E,KAAKF,mBAApF;;AACA,iBAAKkJ,sBAAL,CAA4BC,GAA5B,CAAgC,KAAKD,sBAAL,CAA4BT,CAA5D,EAA+D,CAA/D,EAAkE,KAAKS,sBAAL,CAA4BR,CAA9F;;AACA,iBAAKzI,OAAL,CAAauI,gBAAb,CAA8B,KAAKU,sBAAL,CAA4BE,GAA5B,CAAgC,KAAKpJ,mBAArC,CAA9B;AACH;AACJ,S;;;;eA5bD,eAA2B;AACvB,mBAAO,KAAKqJ,MAAZ;AACH,W;eAZ6C;AAE9C,uBAAyBnD,KAAzB,EAAyC;AACrC,iBAAKmD,MAAL,GAAcnD,KAAd;;AAEA,gBAAI5H,WAAW,CAACmD,WAAhB,EAA6B;AACzB;AAAA;AAAA,8CAAYF,aAAZ,CAA0B;AAAA;AAAA,wCAAS7C,UAAT,CAAoBG,YAA9C;AACH;AACJ;;;eAeD,eAA+B;AAC3B,mBAAO,KAAKyK,UAAZ;AACH,W;eAXD,aAA6BpD,KAA7B,EAA4C;AACxCnF,YAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwB1C,WAAW,CAACyD,SAApC;AAEA,iBAAKuH,UAAL,GAAkBpD,KAAlB;AACA5H,YAAAA,WAAW,CAAC0H,kBAAZ,CAA+B1H,WAAW,CAACsB,aAA3C,EAA0D,KAAK0J,UAA/D;AACAhL,YAAAA,WAAW,CAAC0H,kBAAZ,CAA+B1H,WAAW,CAACuE,QAA3C,EAA6D,KAAKyG,UAAlE;AACAhL,YAAAA,WAAW,CAAC0H,kBAAZ,CAA+B1H,WAAW,CAACyB,eAA3C,EAAoE,KAAKuJ,UAAzE;AACH;;;;QAxD4BvM,S,0CAasB,I,2CACd,K,2CACA,K,0CACD,K,4CACC,I,8FAEN,I,sCACF,I,0CACI,I,kGAEK,I,4CACH,I,wCACD,K,yCACC,I,2CACE,K,0CACF,E,2CACC,C,8CAEG,C,+CACC,C,0CACL,C,iDACO,C,mDACE,C,0CA8BR,C,sCACH,K;;;;;iBAhEL,I;;;;;;;iBAGU,I;;;;;;;iBAGf,I","sourcesContent":["import { EffectManager } from './../framework/effectManager';\nimport { clientEvent } from './../framework/clientEvent';\nimport { playerData } from './../framework/playerData';\nimport { Monster } from './monster';\nimport { uiManager } from './../framework/uiManager';\nimport { MapManager } from './mapManager';\nimport { _decorator, Component, Node, CameraComponent, Vec3, SkeletalAnimationComponent, ParticleSystemComponent, AnimationComponent, find, resources, Prefab, error, BoxColliderComponent, RigidBodyComponent, MeshRenderer, Mesh } from 'cc';\nimport { GameCamera } from './gameCamera';\nimport { Player } from './player';\nimport { resourceUtil } from '../framework/resourceUtil';\nimport { poolManager } from '../framework/poolManager';\nimport { constant } from '../framework/constant';\nimport { localConfig } from '../framework/localConfig';\nimport { Boss } from './boss';\nimport { AudioManager } from '../framework/audioManager';\nconst { ccclass, property } = _decorator;\n\n@ccclass('GameManager')\nexport class GameManager extends Component {\n    @property(GameCamera)\n    public camera: GameCamera = null!;//相机组件\n\n    @property({type: MapManager})\n    public scriptMapManager: MapManager = null!;//地图脚本组件\n\n    @property(Node)\n    public ndLight: Node = null!; //主光源\n\n    public mapInfo: any = {};//地图信息\n    public arrMonsterSkill: any[] = [];//已经预加载的敌人技能\n\n    public static mainCamera: CameraComponent | null = null;//相机组件\n    public static isGameStart: boolean = false;//游戏是否开始\n    public static isGamePause: boolean = false;//游戏是否暂停\n    public static isGameOver: boolean = false;//游戏是否结束\n    public static scriptPlayer: Player = null!;//玩家脚本\n    public static scriptGameCamera: GameCamera;//相机脚本\n    public static ndPlayer: Node = null!;//玩家节点\n    public static ndBoss: Node = null!;//小怪节点\n    public static scriptBoss: Boss = null!;//boss脚本\n    public static ndGameManager: Node;//游戏全局管理节点\n    public static ndEffectManager: Node = null!;//特效节点\n    public static ndMapManager: Node = null!;//地图节点\n    public static isRevive: boolean = false;//玩家是否复活\n    public static isTesting: boolean = true;//是否开启测试代码\n    public static isFirstLoad: boolean = false;//是否首次加载\n    public static arrMonster: Node[] = []; //小怪、boss数组\n    public static existentNum: number = 0;//本层加载的npc、大爱心现存数量（怪物不会和npc、大爱心同时出现，配置表格需注意）\n    //本层敌人加成\n    public static attackAddition: number = 1;//本层敌人攻击加成\n    public static defenseAddition: number = 1;//本层敌人防御加成\n    public static hpAddition: number = 1;//本层敌人生命加成\n    public static moveSpeedAddition: number = 1;//本层敌人移速加成\n    public static attackSpeedAddition: number = 1;//本层敌人攻速加成\n\n    public static set isWin (value: boolean) {\n        this._isWin = value;\n\n        if (GameManager.isGameStart) {\n            clientEvent.dispatchEvent(constant.EVENT_TYPE.ON_GAME_OVER);            \n        }\n    }\n\n    public static get isWin () {\n        return this._isWin;\n    }\n\n    public static set gameSpeed (value: number) {\n        console.log(\"gameSpeed\",GameManager.gameSpeed);\n\n        this._gameSpeed = value;\n        GameManager.refreshEffectSpeed(GameManager.ndGameManager, this._gameSpeed);\n        GameManager.refreshEffectSpeed(GameManager.ndPlayer as Node, this._gameSpeed);\n        GameManager.refreshEffectSpeed(GameManager.ndEffectManager as Node, this._gameSpeed);\n    };\n\n    public static get gameSpeed () {\n        return this._gameSpeed;\n    }\n\n    private _oriMainLightWorPos: Vec3 = null!;//主光源节点初始世界坐标\n    private _offsetWorPosMainLight: Vec3 = new Vec3();//主光源和玩家的向量差\n\n    private static _gameSpeed: number = 1;//游戏速度\n    private static _isWin: boolean = false;//是否取得胜利\n\n    onEnable () {\n        clientEvent.on(constant.EVENT_TYPE.ON_GAME_INIT, this._onGameInit, this);\n        clientEvent.on(constant.EVENT_TYPE.ON_GAME_OVER, this._onGameOver, this);\n        clientEvent.on(constant.EVENT_TYPE.ON_GAME_PAUSE, this._onGamePause, this);\n        clientEvent.on(constant.EVENT_TYPE.REFRESH_LEVEL, this._refreshLevel, this);\n        clientEvent.on(constant.EVENT_TYPE.RECYCLE_ALL, this._recycleAll, this);\n    }\n\n    onDisable () {\n        clientEvent.off(constant.EVENT_TYPE.ON_GAME_INIT, this._onGameInit, this);\n        clientEvent.off(constant.EVENT_TYPE.ON_GAME_OVER, this._onGameOver, this);\n        clientEvent.off(constant.EVENT_TYPE.ON_GAME_PAUSE, this._onGamePause, this);\n        clientEvent.off(constant.EVENT_TYPE.REFRESH_LEVEL, this._refreshLevel, this);\n        clientEvent.off(constant.EVENT_TYPE.RECYCLE_ALL, this._recycleAll, this);\n    }\n\n    start () {\n        GameManager.mainCamera = this.camera?.getComponent(CameraComponent) as CameraComponent;\n        GameManager.scriptGameCamera = this.camera?.getComponent(GameCamera) as GameCamera;\n        GameManager.ndGameManager = this.node;\n        GameManager.ndMapManager = find(\"mapManager\") as Node;\n        GameManager.ndEffectManager = find(\"effectManager\") as Node;\n\n        this._oriMainLightWorPos = this.ndLight.worldPosition.clone();\n\n        if (GameManager.isTesting) {\n            //@ts-ignore\n            window.uiManager = uiManager.instance;      \n            //@ts-ignore\n            window.AudioManager = AudioManager.instance;\n            //@ts-ignore\n            window.playerData = playerData.instance;\n            //@ts-ignore\n            window.clientEvent = clientEvent;      \n            //@ts-ignore\n            window.ndGameManager = GameManager.ndGameManager;\n            //@ts-ignore\n            window.GameManager = GameManager;\n            //@ts-ignore\n            window.ndMapManager = GameManager.ndMapManager;\n            //@ts-ignore\n            window.EffectManager = EffectManager.instance;\n            //@ts-ignore\n            window.ndEffectManager = GameManager.ndEffectManager;\n            //@ts-ignore\n            window.constant = constant;\n            //@ts-ignore\n            //@ts-ignore\n        }\n    }\n\n    /**\n     * 初始化游戏\n     */\n    private _onGameInit () {   \n        let level = playerData.instance.playerInfo.level;\n\n        let totalLevel = localConfig.instance.getTableArr(\"checkpoint\").length;\n        //游戏通关后从倒数第10关开始循环(61-70)\n        if (level > totalLevel) {\n            level = (totalLevel - 10) + (level - totalLevel) % 10;  \n        } \n        \n        this.mapInfo = localConfig.instance.queryByID(\"checkpoint\", String(level));\n        console.log('mapInfo',this.mapInfo)\n        //设置本层敌人属性加成比例\n        GameManager.attackAddition = this.mapInfo.attackAddition;\n        GameManager.defenseAddition = this.mapInfo.defenseAddition;\n        GameManager.hpAddition = this.mapInfo.hpAddition;\n        GameManager.moveSpeedAddition = this.mapInfo.moveSpeedAddition;\n        GameManager.attackSpeedAddition = this.mapInfo.attackSpeedAddition;\n\n        uiManager.instance.showDialog(\"loading/loadingPanel\");\n\n        clientEvent.dispatchEvent(constant.EVENT_TYPE.HIDE_WARP_GATE);\n\n        GameManager.isGameStart = false;\n        GameManager.isGamePause = false;\n        GameManager.isGameOver = false;    \n        GameManager.isWin = false;\n        GameManager.isRevive = false;\n        GameManager.arrMonster = [];\n        GameManager.gameSpeed = 1;\n        GameManager.ndBoss = null!;\n        GameManager.existentNum = 0;\n\n        playerData.instance.addFightTimes();\n\n        AudioManager.instance.pauseAll();\n\n        this._refreshLevel();\n    }\n\n    /**\n     * 刷新关卡, 后期优化写法。。。\n     */\n    private _refreshLevel () {\n        //每层随机一张地图\n        let arrMap = this.mapInfo.mapName.split(\"#\");\n        let mapName = arrMap[Math.floor(Math.random() * arrMap.length)];\n        console.log('mapName',mapName)\n        \n        this.preloadMonsterSkill(mapName).then(()=>{\n            this._recycleAll();\n            this._loadMap(mapName, ()=>{\n                //第一次进入或者失败后被销毁需要重新创建\n                if (!GameManager.ndPlayer) {\n                    this._createPlayer();\n                } else {\n                    GameManager.scriptPlayer.resetPlayerState();\n                    clientEvent.dispatchEvent(constant.EVENT_TYPE.HIDE_LOADING_PANEL);\n                }\n            });\n        })\n    }\n\n    /**\n     * 加载地图数据\n     *\n     * @private\n     * @param {Function} [cb=()=>{}]\n     * @memberof GameManager\n     */\n    private _loadMap (mapName: string, cb: Function = ()=>{}) {   \n        this.scriptMapManager.buildMap(mapName, ()=>{}, ()=>{\n            cb && cb();\n        })\n    }\n\n    /**\n     * 创建玩家\n     *\n     * @private\n     * @memberof GameManager\n     */\n    private _createPlayer () {      \n        resourceUtil.loadModelRes(\"player/player01\").then((pf: any)=>{\n            GameManager.ndPlayer = poolManager.instance.getNode(pf, this.node) as Node;\n            \n            let scriptGameCamera = GameManager.mainCamera?.node.getComponent(GameCamera) as GameCamera;\n            scriptGameCamera.ndFollowTarget = GameManager.ndPlayer;\n\n            let scriptPlayer = GameManager.ndPlayer?.getComponent(Player) as Player;\n            GameManager.scriptPlayer = scriptPlayer;\n            scriptPlayer?.init();\n\n            //初次进入的时候需要预加载弓箭\n            if (GameManager.isFirstLoad) {\n                GameManager.isFirstLoad = false;\n\n                scriptPlayer.preloadArrow(()=>{\n                    clientEvent.dispatchEvent(constant.EVENT_TYPE.HIDE_LOADING_PANEL);\n                })\n            } else {\n                clientEvent.dispatchEvent(constant.EVENT_TYPE.HIDE_LOADING_PANEL);\n            }\n        })\n    }\n\n    /**\n     * 回收怪兽, 武器，特效等\n     *\n     * @private\n     * @memberof GameManager\n     */\n    private _recycleAll () {\n        this.scriptMapManager.recycle();\n\n        for (let i = this.node.children.length - 1; i >= 0; i--) {\n            const ndChild = this.node.children[i];\n            if (ndChild.name !== \"player01\") {\n                poolManager.instance.putNode(ndChild);\n            }\n        }\n\n        while(GameManager.ndEffectManager.children.length) {\n            poolManager.instance.putNode(GameManager.ndEffectManager.children[0]);\n        }\n    }\n\n    /**\n     * 游戏结束\n     */\n    private _onGameOver () {\n        if (GameManager.isGameOver) {\n            return;\n        }\n\n        GameManager.isGamePause = true;\n\n        console.log(\"game over!\", \"isWin ?\", GameManager.isWin);\n\n        uiManager.instance.hideDialog(\"fight/fightPanel\");\n\n        if (GameManager.isWin) {\n            GameManager.isGameOver = true;\n\n            this._recycleAll();\n\n            let nextLevel = Number( playerData.instance.playerInfo.level) + 1;\n            playerData.instance.playerInfo.level = nextLevel;\n\n            //更新已解锁最高层级\n            if (nextLevel > playerData.instance.playerInfo.highestLevel) {\n                playerData.instance.playerInfo.highestLevel = nextLevel;\n            }\n\n            clientEvent.dispatchEvent(constant.EVENT_TYPE.ON_GAME_INIT);\n        } else {            \n            uiManager.instance.showDialog(\"revive/revivePanel\", [()=>{\n                if (GameManager.ndPlayer) {\n                    poolManager.instance.putNode(GameManager.ndPlayer);\n                    GameManager.ndPlayer = null!;\n                    GameManager.scriptPlayer = null!;\n                }\n\n                this._recycleAll();\n            }]);\n        }\n    }\n\n    /**\n     * 游戏暂停\n     */\n    private _onGamePause () {\n        GameManager.isGamePause = true;\n    }\n\n    /**\n     * 获取距离最近的小怪、boss节点\n     * @returns \n     */\n    public static getNearestMonster () {\n        if (GameManager.arrMonster.length) {\n            let offsetA: Vec3 = new Vec3();\n            let offsetB: Vec3 = new Vec3();\n    \n            let playerWorPos = GameManager.ndPlayer?.worldPosition as Vec3;\n            let arr = GameManager.arrMonster.sort((a: any, b: any)=>{\n                let distanceA = Vec3.subtract(offsetA, playerWorPos, a.worldPosition).length();\n                let distanceB = Vec3.subtract(offsetB, playerWorPos, b.worldPosition).length();\n                return  distanceA - distanceB;\n            })\n    \n            arr = arr.filter((item: Node)=>{\n                let scriptMonster = item.getComponent(Monster) as Monster;\n                return item.parent !== null && !scriptMonster.isDie;\n            })\n\n            return arr[0];\n        } else if (GameManager.ndBoss && !GameManager.scriptBoss.isDie) {\n            return GameManager.ndBoss;\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * 获取除了怪物本身自己外一定范围内的怪物\n     *\n     * @static\n     * @param {Node} ndMonster 被击中的敌人\n     * @param {boolean} [isAll=false] 是否返回全部敌人,否则只随机返回一个\n     * @param {number} [range=5] 范围\n     * @return {*} \n     * @memberof GameManager\n     */\n    public static getNearbyMonster (ndMonster: Node, isAll: boolean = false, range: number = 5) {\n        //范围\n        let arrMonster: any[] = [];\n        let offsetPos: Vec3 = new Vec3();\n\n        if (GameManager.arrMonster.length) {\n            arrMonster = GameManager.arrMonster.concat();\n        } \n\n        if (GameManager.ndBoss) {\n            arrMonster.push(GameManager.ndBoss);\n        } \n\n        arrMonster = arrMonster.filter((item: Node)=>{\n            let scriptMonster = item.getComponent(Monster) as Monster;\n            Vec3.subtract(offsetPos, ndMonster.worldPosition, item.worldPosition);\n            return item.parent !== null && !scriptMonster.isDie && offsetPos.length() <= range && ndMonster.worldPosition !== item.worldPosition;\n        })\n\n        if (arrMonster.length) {\n            if (!isAll) {\n                let index = Math.floor(Math.random() * arrMonster.length);\n                return arrMonster = arrMonster.filter((ndChild: Node, idx: number)=>{\n                    return idx === index;\n                })\n            } else {\n                return arrMonster;\n            }\n        } else {\n            return arrMonster;\n        }\n    }\n\n    /**\n     * 刷新自节点的动画、粒子播放速度\n     * @param targetNode \n     * @param value \n     * @returns \n     */\n     public static refreshEffectSpeed (targetNode: Node, value: number) {\n        if (!targetNode) {\n            return;\n        }   \n        let arrAni = targetNode.getComponentsInChildren(AnimationComponent);\n        arrAni.forEach((item: AnimationComponent)=>{\n            item.clips.forEach((clip: any)=>{\n                let aniName = clip?.name as string\n                let aniState = item.getState(aniName);\n                aniState.speed = value;\n            })\n        })\n\n        let arrSkeletalAni = targetNode.getComponentsInChildren(SkeletalAnimationComponent);\n        arrSkeletalAni.forEach((item: SkeletalAnimationComponent)=>{\n            item.clips.forEach((clip: any)=>{\n                let aniName = clip?.name as string\n                let aniState = item.getState(aniName);\n                aniState.speed = value;\n            })\n        })\n\n        let arrParticle = targetNode.getComponentsInChildren(ParticleSystemComponent);\n        arrParticle.forEach((item: ParticleSystemComponent)=>{\n            item.simulationSpeed = value;\n        })\n    }\n\n    /**\n     * 添加钻石\n     *\n     * @static\n     * @param {number} [value=1]\n     * @memberof GameManager\n     */\n    public static addGold (value: number = 1) {\n        playerData.instance.updatePlayerInfo('gold', Math.ceil(value));\n        clientEvent.dispatchEvent(constant.EVENT_TYPE.REFRESH_GOLD);\n    }\n\n    /**\n     * 每层进入前预加载该层所需的敌人技能\n     *\n     * @private\n     * @memberof GameManager\n     */\n    public preloadMonsterSkill (arrName: string) {\n        return new Promise((resolve, reject)=>{\n            let arrLoadSkill: string[] = [];//等待预加载的技能\n            let arrInfo = localConfig.instance.getTableArr(arrName);\n            //获取所有敌人信息\n            arrInfo = arrInfo.filter((item: any)=>{\n                return item.ID.startsWith(\"2\");\n            })\n\n            //获得敌人技能\n            if (arrInfo.length) {\n                arrInfo.forEach((element: any) => {\n                    let arrSkill = element.skill === \"\" ? [] : element.skill.split(\"#\");\n                    arrSkill.length && arrSkill.forEach((id: string) => {\n                        if (this.arrMonsterSkill.indexOf(id) === -1) {\n                            this.arrMonsterSkill.push(id);\n                            arrLoadSkill.push(id);\n                        }\n                    });            \n                });\n\n                let arrPromise = [];\n                if (arrLoadSkill.length) {\n                    for (let i = 0; i < arrLoadSkill.length; i++) {\n                        const element = arrLoadSkill[i];  \n                        //预加载敌人技能\n                        let skillInfo = localConfig.instance.queryByID(\"monsterSkill\", element);\n                        let p = resourceUtil.loadEffectRes(`${skillInfo.resName}/${skillInfo.resName}`).then((prefab: any)=>{\n                            let ndSkillCollider = poolManager.instance.getNode(prefab, GameManager.ndGameManager as Node) as Node;\n                            ndSkillCollider.setWorldPosition(this.node.worldPosition.x, 30, this.node.worldPosition.z);\n                        })\n                        arrPromise.push(p);\n                    }\n        \n                    Promise.all(arrPromise).then(()=>{\n                        resolve(null);\n                    }).catch((e: any)=>{\n                        console.error(\"预加载敌人技能报错\", e);\n                    })\n                } else {\n                    resolve(null);\n                }\n            } else {\n                resolve(null);\n            }\n        })\n    }\n\n    /**\n     * 判断本层的爱心、npc是否都已经触发\n     *\n     * @static\n     * @memberof GameManager\n     */\n    public static checkTriggerAll () {\n        GameManager.existentNum -= 1;\n\n        if (GameManager.existentNum <= 0) {\n            clientEvent.dispatchEvent(constant.EVENT_TYPE.SHOW_WARP_GATE);\n        }\n    }\n\n    update (deltaTime: number) {\n         //光源跟随玩家人物移动\n         if (GameManager.scriptPlayer && GameManager.scriptPlayer.node && !GameManager.isGameOver) {\n            Vec3.subtract(this._offsetWorPosMainLight, GameManager.ndPlayer.worldPosition, this._oriMainLightWorPos);\n            this._offsetWorPosMainLight.set(this._offsetWorPosMainLight.x, 0, this._offsetWorPosMainLight.z);\n            this.ndLight.setWorldPosition(this._offsetWorPosMainLight.add(this._oriMainLightWorPos));\n        }\n    }\n}\n"]}